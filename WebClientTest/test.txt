import java.io.*;
import java.net.*;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;


public class WebClientTest {


    public static void sendFile(String fileName) throws IOException {
		String out = "";


		URL url = new URL("http://localHost:3000");
		HttpURLConnection conn = (HttpURLConnection) url.openConnection();
		conn.setRequestMethod("POST");
		conn.setDoOutput(true);


        BufferedReader file = new BufferedReader(new FileReader(fileName));

		System.out.println("Sending contents of file: " + fileName + " to server");

		String fileLine = file.readLine();
		while (fileLine != null) {
			out += fileLine + "\n";
			fileLine = file.readLine();
		}
		file.close();



		try (OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream())) {
		    System.out.println("Data Sent!");
		    writer.write(out);
		    writer.flush();
		}
		int responseCode = conn.getResponseCode();

    	System.out.println(responseCode);


		System.out.println("File: " + fileName + " sent to server");


    }

    public static String getSha1Hash(String fileName) throws NoSuchAlgorithmException, IOException {
    	MessageDigest sha1 = MessageDigest.getInstance("SHA1");
        FileInputStream fis = new FileInputStream(fileName);

        byte[] data = new byte[1024];
        int read = 0;
        while ((read = fis.read(data)) != -1) {
            sha1.update(data, 0, read);
        };
        byte[] hashBytes = sha1.digest();

        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < hashBytes.length; i++) {
          sb.append(Integer.toString((hashBytes[i] & 0xff) + 0x100, 16).substring(1));
        }

        String fileHash = sb.toString();
        fis.close();
        return fileHash;
    }


	public static void main(String[] args) {
		try {
			sendFile("test.txt");
			String hash = getSha1Hash("test.txt");
			while(true){
				String hash2 = getSha1Hash("test.txt");
				boolean noChanges = hash.equals(hash2);
				if (!noChanges) {
					sendFile("test.txt");
					hash = hash2;
				}

				try {
	        	    Thread.sleep(1000);
	        	} catch(InterruptedException ex) {
	        	    Thread.currentThread().interrupt();
	        	}
			}

		} catch (IOException e) {
			e.printStackTrace();

		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		}

//		try {
//			sendFile("test.txt");
//		} catch (Exception e) {
//			e.printStackTrace();
//		}

	}

}
